1, 重定向的特点:
    浏览器地址发生变化
        本来要访问的是/login,重定向后变成/index.jsp
    两次请求:
        第一次请求/login,服务器返回重定向状态码
        指定第二次请求路径,然后浏览器发起第二次请求
    路径范围:
        重定向是让浏览器再次发器一个请求,
        路径可以是一个任意的url
        既可以像我们现在这样,访问本应用的/index.jsp,
        也可以访问外部应用网站
    路径样式:
        是一个绝对路径,
        因为对浏览器来说,并不知道再次发送请求
        是要发送给哪个应用的,所以要绝对路径来指明

2,响应头和响应体:
    响应体:就是我们原来给前端的JSON数据,就属于响应体
    响应头:在后端发送一些键值对给前端,一般用来设置某些信息
    状态码:表示再次请求的状态,成功(200), 重定向(302),错误(404或500)

3,请求头
    当浏览器发起请求时,会封装一些键值对传输给服务器,
    这些键值对就叫请求头(因为实在发起时封装的)

   通过Referer请求头的值,可以判断本次请求是否从本应用发起的
   如果为null,则是从浏览器直接输入访问的
   如果不是null,则是从本应用中发起访问的

4,request的各种get方法

5,BeanUtil的populated方法

6,请求转发和请求包含;
    请求转发:
        只有最后一个目标资源,可以响应浏览器
    请求包含:
        多个Servlet都可以响应浏览器

7,请求转发/请求包含与重定向的区别;
    请求次数:
        转发:1次
        重定向:2次
    地址栏路径变化:
        转发:不变
        重定向:改变为重定向的目标路径
    范围:
        转发:只能转发到本应用中的资源
        重定向:任意路径
    路径:
        转发:相对路径
        重定向:绝对路径
    转发效率高于重定向

    ====重定向实际上实在浏览器中执行的,而转发是在服务器中执行的====

8,域对象
    域就是一个范围
    从请求发起到请求被响应
    用request对象表示

    也就是Request域对象

    域属性和参数的区别
        属性服务器内部自己设置的
        参数是由浏览器传递给服务器的

9,ServletContext,是Servlet上下文对象
    表示Servlet所处的环境

    Tomcat,也叫做Servlet的容器

    当Tomcat启动时,对应的ServletContext对象就会被创建
    当Tomcat关闭时,对应的ServletContext对象就会被销毁

    所以ServletContext的生命周期最长

10,初始化参数:
    全局参数: 当应用启动时,就已经配置好的内容
        全局参数要在web.xml中配置
        因为是全局,所以每个Servlet都能用

    局部参数: 为每个Servlet单独配置的初始化参数

    ServletConfig
        在web.xml中,对每个Servlet的配置,都会被抽象成一个ServletConfig对象
        在AServlet中获得ServletConfig,则这个ServletConfig中的内容就都是AServlet的配置信息











